version: "3.8"

services:
  cmdchat-server:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: cmdchat-server
    restart: unless-stopped
    ports:
      - "5050:5050"
    environment:
      # Authentication tokens (comma-separated)
      - CMDCHAT_TOKENS=${CMDCHAT_TOKENS:-}
      # Log level
      - CMDCHAT_LOG_LEVEL=${CMDCHAT_LOG_LEVEL:-INFO}
    # For TLS support, uncomment and configure:
    # volumes:
    #   - ./certs/server.crt:/app/certs/server.crt:ro
    #   - ./certs/server.key:/app/certs/server.key:ro
    # command: >
    #   --host 0.0.0.0
    #   --port 5050
    #   --certfile /app/certs/server.crt
    #   --keyfile /app/certs/server.key
    #   --metrics-interval 60
    networks:
      - cmdchat-network
    healthcheck:
      test:
        [
          "CMD",
          "python",
          "-c",
          "import socket; s = socket.socket(); s.settimeout(2); s.connect(('localhost', 5050)); s.close()",
        ]
      interval: 30s
      timeout: 5s
      retries: 3
      start_period: 5s
    deploy:
      resources:
        limits:
          cpus: "1.0"
          memory: 512M
        reservations:
          cpus: "0.25"
          memory: 128M

  # Optional: nginx reverse proxy with TLS termination
  # Uncomment to use nginx as a TLS proxy
  # nginx:
  #   image: nginx:alpine
  #   container_name: cmdchat-nginx
  #   restart: unless-stopped
  #   ports:
  #     - "443:443"
  #   volumes:
  #     - ./nginx.conf:/etc/nginx/nginx.conf:ro
  #     - ./certs/fullchain.pem:/etc/nginx/certs/fullchain.pem:ro
  #     - ./certs/privkey.pem:/etc/nginx/certs/privkey.pem:ro
  #   networks:
  #     - cmdchat-network
  #   depends_on:
  #     - cmdchat-server

networks:
  cmdchat-network:
    driver: bridge
