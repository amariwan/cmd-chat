repos:
# Code formatting
- repo: https://github.com/psf/black
  rev: 24.10.0
  hooks:
  - id: black
    language_version: python3.13
    args: [ --line-length=100 ]

# Import sorting
- repo: https://github.com/astral-sh/ruff-pre-commit
  rev: v0.7.4
  hooks:
  - id: ruff
    args: [ --fix, --select=I ]
  - id: ruff-format

# Linting
- repo: https://github.com/astral-sh/ruff-pre-commit
  rev: v0.7.4
  hooks:
  - id: ruff
    args:
    - --fix
    - --select=E,W,F,I,N,UP,B,A,C4,DTZ,T10,EM,ISC,ICN,PIE,PT,RET,SIM,TID,ARG,PTH,ERA,PL,RUF

# Type checking
- repo: https://github.com/pre-commit/mirrors-mypy
  rev: v1.13.0
  hooks:
  - id: mypy
    args: [ --strict, --ignore-missing-imports ]
    additional_dependencies:
    - types-all
    - cryptography

# Security scanning
- repo: https://github.com/PyCQA/bandit
  rev: 1.7.10
  hooks:
  - id: bandit
    args: [ -ll, -r, cmdchat ]

# General checks
- repo: https://github.com/pre-commit/pre-commit-hooks
  rev: v5.0.0
  hooks:
  - id: trailing-whitespace
  - id: end-of-file-fixer
  - id: check-yaml
  - id: check-toml
  - id: check-json
  - id: check-added-large-files
    args: [ --maxkb=1000 ]
  - id: check-merge-conflict
  - id: check-case-conflict
  - id: mixed-line-ending
    args: [ --fix=lf ]
  - id: detect-private-key

# Markdown linting
- repo: https://github.com/igorshubovych/markdownlint-cli
  rev: v0.42.0
  hooks:
  - id: markdownlint
    args: [ --fix ]

# Commit message linting
- repo: https://github.com/commitizen-tools/commitizen
  rev: v3.30.1
  hooks:
  - id: commitizen
    stages: [ commit-msg ]

# Check pyproject.toml
- repo: https://github.com/python-poetry/poetry
  rev: 1.8.0
  hooks:
  - id: poetry-check

# Test execution (optional, can be slow)
- repo: local
  hooks:
  - id: pytest-check
    name: pytest-check
    entry: pytest
    language: system
    pass_filenames: false
    always_run: true
    args: [ tests/, -v, --tb=short ]
    stages: [ push ]
